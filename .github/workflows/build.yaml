name: Build

on:
  release:
    types: [published]

env:
  DOCKER_HUB_IMAGE: docker.io/morphy/revive-action
  GHCR_IMAGE: ghcr.io/${{ github.repository }}

jobs:

  build:
    name: Build image
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:

      - name: Checkout
        uses: actions/checkout@v4

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.DOCKER_HUB_IMAGE }}
            ${{ env.GHCR_IMAGE }}
          tags: |
            type=semver,prefix=v,pattern={{version}}
            type=semver,prefix=v,pattern={{major}}.{{minor}}
            type=semver,prefix=v,pattern={{major}}
            type=sha

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: docker.io
          username: ${{ vars.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract version
        id: version
        run: echo ::set-output name=version::${GITHUB_REF#refs/tags/}

      - name: Build and push
        id: push
        uses: docker/build-push-action@v6
        with:
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: ACTION_VERSION=${{ steps.version.outputs.version }}
          provenance: true
          push: true

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ${{ env.GHCR_IMAGE }}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true